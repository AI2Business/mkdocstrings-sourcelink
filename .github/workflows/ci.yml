name: Python Package

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    name: Python ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - 3.6
          - 3.7
          - 3.8
          - 3.9
        os:
          - ubuntu-latest
          - macOS-latest
          - windows-latest
        arch:
          - x64
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r dev-requirements.txt
      - name: Install mkdocstrings-sourcelink
        run: |
          pip install .
      - name: Style and doctest
        run: |
          isort --check --diff .
          black --check --diff .
          pylint mkdocstrings_sourcelink/
          pydocstyle mkdocstrings_sourcelink/
      - name: Test with pytest and generate coverage report
        run: |
          pytest -vv --cov=./mkdocstrings_sourcelink --cov-report=xml
      - name: Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
  documentation:
    name: Build documentation
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r dev-requirements.txt
      - name: Install mkdocstrings-sourcelink
        run: |
          pip install .
      - name: Set git config
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
      - name: Build documentation
        run: |
          cd docs
          pip install -r doc-requirements.txt
          python generate_docs.py
          mkdocs build --clean --verbose
          rm -rf site/
          cd ~
      - name: Deploy documentation develops
        if: contains(github.ref, 'refs/heads/main')
        run: |
          cd docs
          python generate_docs.py
          mkdocs gh-deploy --clean --force
          cd ~
